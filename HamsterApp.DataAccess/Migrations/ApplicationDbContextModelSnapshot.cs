// <auto-generated />
using System;
using HamsterApp.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HamsterApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HamsterApp.Entities.Models.ApiUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "e7eabebd-e10c-4da9-b6aa-2db9cad6b84d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4dec43e0-5cec-457c-9f8b-e61c000db162",
                            Email = "admin@hamsters.com",
                            EmailConfirmed = false,
                            FirstName = "System",
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@HAMSTERS.COM",
                            NormalizedUserName = "ADMIN@HAMSTERS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEPBf3rFezVIgC/4PJCIxF4Ert9Ou+c3Awvc0UH8vH3Me7+eotpZ/nZTOVuxaTtAtBA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2266e292-e0b7-45f1-9a37-3dfbdcb1aed8",
                            TwoFactorEnabled = false,
                            UserName = "admin@hamsters.com"
                        },
                        new
                        {
                            Id = "087f2124-f507-4642-a8f7-84442abb3d70",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "34e0d63b-058f-401d-9d54-2bbffce3e02a",
                            Email = "user@hamsters.com",
                            EmailConfirmed = false,
                            FirstName = "System",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@HAMSTERS.COM",
                            NormalizedUserName = "USER@HAMSTERS.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFj6zRblMy91GC/G4s9k6XazmfwhRMYXMdL/UkbFFPxYeTWPRR1hkgsFuo5iORmP1w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1696bbcd-3750-48db-9d0d-da7eb685b350",
                            TwoFactorEnabled = false,
                            UserName = "user@hamsters.com"
                        });
                });

            modelBuilder.Entity("HamsterApp.Entities.Models.Hamster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FavFood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Games")
                        .HasColumnType("int");

                    b.Property<string>("ImgName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Losses")
                        .HasColumnType("int");

                    b.Property<string>("Loves")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hamsters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 2,
                            FavFood = "Eating1",
                            Games = 0,
                            ImgName = "/images/hamster-1.jpg",
                            Losses = 0,
                            Loves = "Losing1",
                            Name = "Hamster1",
                            Wins = 0
                        },
                        new
                        {
                            Id = 2,
                            Age = 3,
                            FavFood = "Eating2",
                            Games = 0,
                            ImgName = "/images/hamster-2.jpg",
                            Losses = 0,
                            Loves = "Losing2",
                            Name = "Hamster2",
                            Wins = 0
                        },
                        new
                        {
                            Id = 3,
                            Age = 2,
                            FavFood = "Eating3",
                            Games = 0,
                            ImgName = "/images/hamster-3.jpg",
                            Losses = 0,
                            Loves = "Losing3",
                            Name = "Hamster3",
                            Wins = 0
                        },
                        new
                        {
                            Id = 4,
                            Age = 1,
                            FavFood = "Eating4",
                            Games = 0,
                            ImgName = "/images/hamster-4.jpg",
                            Losses = 0,
                            Loves = "Losing4",
                            Name = "Hamster4",
                            Wins = 0
                        },
                        new
                        {
                            Id = 5,
                            Age = 2,
                            FavFood = "Eating5",
                            Games = 0,
                            ImgName = "/images/hamster-5.jpg",
                            Losses = 0,
                            Loves = "Losing5",
                            Name = "Hamster5",
                            Wins = 0
                        },
                        new
                        {
                            Id = 6,
                            Age = 2,
                            FavFood = "Eating6",
                            Games = 0,
                            ImgName = "/images/hamster-6.jpg",
                            Losses = 0,
                            Loves = "Losing6",
                            Name = "Hamster6",
                            Wins = 0
                        },
                        new
                        {
                            Id = 7,
                            Age = 3,
                            FavFood = "Eating7",
                            Games = 0,
                            ImgName = "/images/hamster-7.jpg",
                            Losses = 0,
                            Loves = "Losing7",
                            Name = "Hamster7",
                            Wins = 0
                        },
                        new
                        {
                            Id = 8,
                            Age = 2,
                            FavFood = "Eating8",
                            Games = 0,
                            ImgName = "/images/hamster-8.jpg",
                            Losses = 0,
                            Loves = "Losing8",
                            Name = "Hamster8",
                            Wins = 0
                        },
                        new
                        {
                            Id = 9,
                            Age = 1,
                            FavFood = "Eating9",
                            Games = 0,
                            ImgName = "/images/hamster-9.jpg",
                            Losses = 0,
                            Loves = "Losing9",
                            Name = "Hamster9",
                            Wins = 0
                        },
                        new
                        {
                            Id = 10,
                            Age = 2,
                            FavFood = "Eating10",
                            Games = 0,
                            ImgName = "/images/hamster-10.jpg",
                            Losses = 0,
                            Loves = "Losing10",
                            Name = "Hamster10",
                            Wins = 0
                        },
                        new
                        {
                            Id = 11,
                            Age = 3,
                            FavFood = "Eating11",
                            Games = 0,
                            ImgName = "/images/hamster-11.jpg",
                            Losses = 0,
                            Loves = "Losing11",
                            Name = "Hamster11",
                            Wins = 0
                        },
                        new
                        {
                            Id = 12,
                            Age = 2,
                            FavFood = "Eating12",
                            Games = 0,
                            ImgName = "/images/hamster-12.jpg",
                            Losses = 0,
                            Loves = "Losing12",
                            Name = "Hamster12",
                            Wins = 0
                        },
                        new
                        {
                            Id = 13,
                            Age = 3,
                            FavFood = "Eating13",
                            Games = 0,
                            ImgName = "/images/hamster-13.jpg",
                            Losses = 0,
                            Loves = "Losing13",
                            Name = "Hamster13",
                            Wins = 0
                        },
                        new
                        {
                            Id = 14,
                            Age = 1,
                            FavFood = "Eating14",
                            Games = 0,
                            ImgName = "/images/hamster-14.jpg",
                            Losses = 0,
                            Loves = "Losing14",
                            Name = "Hamster14",
                            Wins = 0
                        },
                        new
                        {
                            Id = 15,
                            Age = 1,
                            FavFood = "Eating15",
                            Games = 0,
                            ImgName = "/images/hamster-15.jpg",
                            Losses = 0,
                            Loves = "Losing15",
                            Name = "Hamster15",
                            Wins = 0
                        },
                        new
                        {
                            Id = 16,
                            Age = 1,
                            FavFood = "Eating16",
                            Games = 0,
                            ImgName = "/images/hamster-16.jpg",
                            Losses = 0,
                            Loves = "Losing16",
                            Name = "Hamster16",
                            Wins = 0
                        },
                        new
                        {
                            Id = 17,
                            Age = 1,
                            FavFood = "Eating17",
                            Games = 0,
                            ImgName = "/images/hamster-17.jpg",
                            Losses = 0,
                            Loves = "Losing17",
                            Name = "Hamster17",
                            Wins = 0
                        },
                        new
                        {
                            Id = 18,
                            Age = 1,
                            FavFood = "Eating18",
                            Games = 0,
                            ImgName = "/images/hamster-18.jpg",
                            Losses = 0,
                            Loves = "Losing18",
                            Name = "Hamster18",
                            Wins = 0
                        },
                        new
                        {
                            Id = 19,
                            Age = 1,
                            FavFood = "Eating19",
                            Games = 0,
                            ImgName = "/images/hamster-19.jpg",
                            Losses = 0,
                            Loves = "Losing19",
                            Name = "Hamster19",
                            Wins = 0
                        },
                        new
                        {
                            Id = 20,
                            Age = 1,
                            FavFood = "Eating20",
                            Games = 0,
                            ImgName = "/images/hamster-20.jpg",
                            Losses = 0,
                            Loves = "Losing20",
                            Name = "Hamster20",
                            Wins = 0
                        },
                        new
                        {
                            Id = 21,
                            Age = 1,
                            FavFood = "Eating21",
                            Games = 0,
                            ImgName = "/images/hamster-21.jpg",
                            Losses = 0,
                            Loves = "Losing21",
                            Name = "Hamster21",
                            Wins = 0
                        },
                        new
                        {
                            Id = 22,
                            Age = 1,
                            FavFood = "Eating22",
                            Games = 0,
                            ImgName = "/images/hamster-22.jpg",
                            Losses = 0,
                            Loves = "Losing22",
                            Name = "Hamster22",
                            Wins = 0
                        },
                        new
                        {
                            Id = 23,
                            Age = 1,
                            FavFood = "Eating23",
                            Games = 0,
                            ImgName = "/images/hamster-23.jpg",
                            Losses = 0,
                            Loves = "Losing23",
                            Name = "Hamster23",
                            Wins = 0
                        },
                        new
                        {
                            Id = 24,
                            Age = 3,
                            FavFood = "Eating24",
                            Games = 0,
                            ImgName = "/images/hamster-24.jpg",
                            Losses = 0,
                            Loves = "Losing24",
                            Name = "Hamster24",
                            Wins = 0
                        },
                        new
                        {
                            Id = 25,
                            Age = 1,
                            FavFood = "Eating25",
                            Games = 0,
                            ImgName = "/images/hamster-25.jpg",
                            Losses = 0,
                            Loves = "Losing25",
                            Name = "Hamster25",
                            Wins = 0
                        },
                        new
                        {
                            Id = 26,
                            Age = 1,
                            FavFood = "Eating26",
                            Games = 0,
                            ImgName = "/images/hamster-26.jpg",
                            Losses = 0,
                            Loves = "Losing26",
                            Name = "Hamster26",
                            Wins = 0
                        },
                        new
                        {
                            Id = 27,
                            Age = 1,
                            FavFood = "Eating27",
                            Games = 0,
                            ImgName = "/images/hamster-27.jpg",
                            Losses = 0,
                            Loves = "Losing27",
                            Name = "Hamster27",
                            Wins = 0
                        },
                        new
                        {
                            Id = 28,
                            Age = 1,
                            FavFood = "Eating28",
                            Games = 0,
                            ImgName = "/images/hamster-28.jpg",
                            Losses = 0,
                            Loves = "Losing28",
                            Name = "Hamster28",
                            Wins = 0
                        },
                        new
                        {
                            Id = 29,
                            Age = 1,
                            FavFood = "Eating29",
                            Games = 0,
                            ImgName = "/images/hamster-29.jpg",
                            Losses = 0,
                            Loves = "Losing29",
                            Name = "Hamster29",
                            Wins = 0
                        },
                        new
                        {
                            Id = 30,
                            Age = 1,
                            FavFood = "Eating30",
                            Games = 0,
                            ImgName = "/images/hamster-30.jpg",
                            Losses = 0,
                            Loves = "Losing30",
                            Name = "Hamster30",
                            Wins = 0
                        },
                        new
                        {
                            Id = 31,
                            Age = 1,
                            FavFood = "Eating31",
                            Games = 0,
                            ImgName = "/images/hamster-31.jpg",
                            Losses = 0,
                            Loves = "Losing31",
                            Name = "Hamster31",
                            Wins = 0
                        },
                        new
                        {
                            Id = 32,
                            Age = 1,
                            FavFood = "Eating32",
                            Games = 0,
                            ImgName = "/images/hamster-32.jpg",
                            Losses = 0,
                            Loves = "Losing32",
                            Name = "Hamster32",
                            Wins = 0
                        },
                        new
                        {
                            Id = 33,
                            Age = 1,
                            FavFood = "Eating33",
                            Games = 0,
                            ImgName = "/images/hamster-33.jpg",
                            Losses = 0,
                            Loves = "Losing33",
                            Name = "Hamster33",
                            Wins = 0
                        },
                        new
                        {
                            Id = 34,
                            Age = 1,
                            FavFood = "Eating34",
                            Games = 0,
                            ImgName = "/images/hamster-34.jpg",
                            Losses = 0,
                            Loves = "Losing34",
                            Name = "Hamster34",
                            Wins = 0
                        },
                        new
                        {
                            Id = 35,
                            Age = 3,
                            FavFood = "Eating35",
                            Games = 0,
                            ImgName = "/images/hamster-35.jpg",
                            Losses = 0,
                            Loves = "Losing35",
                            Name = "Hamster35",
                            Wins = 0
                        },
                        new
                        {
                            Id = 36,
                            Age = 2,
                            FavFood = "Eating36",
                            Games = 0,
                            ImgName = "/images/hamster-36.jpg",
                            Losses = 0,
                            Loves = "Losing36",
                            Name = "Hamster36",
                            Wins = 0
                        },
                        new
                        {
                            Id = 37,
                            Age = 3,
                            FavFood = "Eating37",
                            Games = 0,
                            ImgName = "/images/hamster-37.jpg",
                            Losses = 0,
                            Loves = "Losing37",
                            Name = "Hamster37",
                            Wins = 0
                        },
                        new
                        {
                            Id = 38,
                            Age = 1,
                            FavFood = "Eating38",
                            Games = 0,
                            ImgName = "/images/hamster-38.jpg",
                            Losses = 0,
                            Loves = "Losing38",
                            Name = "Hamster38",
                            Wins = 0
                        },
                        new
                        {
                            Id = 39,
                            Age = 1,
                            FavFood = "Eating39",
                            Games = 0,
                            ImgName = "/images/hamster-39.jpg",
                            Losses = 0,
                            Loves = "Losing39",
                            Name = "Hamster39",
                            Wins = 0
                        },
                        new
                        {
                            Id = 40,
                            Age = 3,
                            FavFood = "Eating40",
                            Games = 0,
                            ImgName = "/images/hamster-40.jpg",
                            Losses = 0,
                            Loves = "Losing40",
                            Name = "Hamster40",
                            Wins = 0
                        });
                });

            modelBuilder.Entity("HamsterApp.Entities.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HamsterId")
                        .HasColumnType("int");

                    b.Property<int>("LoseId")
                        .HasColumnType("int");

                    b.Property<int>("WinId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HamsterId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3845d87b-b230-41ff-a1a7-84bbd7ec821d",
                            ConcurrencyStamp = "5fa80517-4c06-433f-9d9f-72a5d3e21977",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "985f4930-21ad-4249-abaf-e4251b1553d9",
                            ConcurrencyStamp = "2ec9a09b-8429-4997-898d-2c929b965197",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "087f2124-f507-4642-a8f7-84442abb3d70",
                            RoleId = "3845d87b-b230-41ff-a1a7-84bbd7ec821d"
                        },
                        new
                        {
                            UserId = "e7eabebd-e10c-4da9-b6aa-2db9cad6b84d",
                            RoleId = "985f4930-21ad-4249-abaf-e4251b1553d9"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HamsterApp.Entities.Models.Match", b =>
                {
                    b.HasOne("HamsterApp.Entities.Models.Hamster", "Hamster")
                        .WithMany("Matches")
                        .HasForeignKey("HamsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hamster");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("HamsterApp.Entities.Models.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("HamsterApp.Entities.Models.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HamsterApp.Entities.Models.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("HamsterApp.Entities.Models.ApiUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HamsterApp.Entities.Models.Hamster", b =>
                {
                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
