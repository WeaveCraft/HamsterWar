@page "/hamsters/"
@inject IHamsterService hamsterService
@inject IJSRuntime jsRuntime
@inject NavigationManager navManager
<h3>Hamster Gallery</h3>

@if (response.Success == false)
{
    <div class="alert alert-danger">
        <h4>Loading Data...</h4>
    </div>
}

@if (Model! != null)
{
    <a class="btn btn-primary" href="/hamsters/create"><span class="oi oi-plus" aria-hidden="true"></span> Add New Hamster</a>

    <div class="row container pb-3 backgroundWhite">
        <div class="col-12">
            <div class="row my-2 d-flex justify-content-center">
                @foreach (var hamster in Model)
                {
                    <div class="col-lg-4 col-md-6 pb-4 filter">
                        <div class="card bg-white rounded shadow-sm" style="border:1px solid #222">
                            <div class="card-body pb-1 row">
                                <div class="col-8 h5">@hamster.Name</div>
                                <div class="col-4 text-end"><span class="text-info h4">Age: @hamster.Age</span></div>
                            </div>
                            <img class="card-img-top img-thumbnail d-block mx-auto mb-3" src="@hamster.ImgName" alt="@hamster.Name">
                            <div class="card-body p-1 px-3 row">
                                <div class="col-12 pt-2" style="font-size:13px; text-align:center">
                                    <button class="btn btn-danger" @onclick=@(() => Delete(@hamster.Id))><span class="oi oi-trash" aria-hidden="true"></span>Delete</button>
                                </div>
                                <div class="col-12 pt-2" style="font-size:13px; text-align:center">
                                    <a class="btn btn-warning" href="/hamsters/detail/@hamster.Id"><span class="oi oi-pencil" aria-hidden="true"></span>Details about @hamster.Name</a>
                                </div>

                            </div>

                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
}
else
{
    if (IsLoading)
    {
        <div class="row my-2 d-flex justify-content-center">
            <div class="col-lg-8 col-md-6 pb-4 filter">
                <img class="card-img-top img-fluid d-block my-auto mb-3" src="/images/hamsterGallery_loading.gif">
            </div>
        </div>
    }
    else
    {
        <p>There are no hamsters to display.</p>
    }
}
}


@code {
    private List<HamsterReadOnlyDto> Model;
    private Response<List<HamsterReadOnlyDto>> response = new Response<List<HamsterReadOnlyDto>> { Success = true };
    public bool IsLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        response = await hamsterService.GetHamsters();
        if (response.Success)
        {
            Model = response.Data;
        }
    }

    private async Task Delete(int hamsterId)
    {
        var hamster = Model.First(u => u.Id == hamsterId);
        var confirm = await jsRuntime.InvokeAsync<bool>("confirm", $"Are you sure you wish to delete {hamster.Name}?");
        if (confirm)
        {
            var response = await hamsterService.DeleteHamster(hamsterId);
            if (response.Success)
            {
                await jsRuntime.SweetAlertSuccess($"{hamster.Name} Deleted");
                await OnInitializedAsync();
            }
        }
    }

}
